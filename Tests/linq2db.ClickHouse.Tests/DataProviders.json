//
// This file defines data providers and connection strings used by default for all users.
// Copy this file as UserDataProviders.json and specify providers and connection strings you need to work on.
// UserDataProviders.json is in .gitignore and it is not committed to the repository.
//
// For example:
//
//		{
//			"LocalConnectionStrings":
//			{
//				"Connections" :
//				{
//					"SqlAzure" :
//					{
//						"Provider"         : "System.Data.SqlClient",
//						"ConnectionString" : "Server=tcp:aiae6kk6yl.database.windows.net,1433;Database=TestData;User ID=TestUser@aiae6kk6yl;Password=xxx;Trusted_Connection=False;Encrypt=True;"
//					},
//				}
//			}
//		}
//

{
	"CORE31": {
		"NoLinqService": true,
		"DefaultConfiguration": "SQLite.MS",
		"Providers": [
			"SQLite.MS",
			//"ClickHouse.Ado",
			"ClickHouse.Client"
		],
		"Connections": {
			"ClickHouse.Ado": {
				"Provider": "ClickHouse.Ado",
				"ConnectionString": "Host=localhost;Port=9000;Database=TestDatabaseTcp;User=default;Password=TestPassword;"
			},
			"ClickHouse.Client": {
				"Provider": "ClickHouse.Client",
				"ConnectionString": "Host=rc1c-pk6w0hv8kpqqrn89.mdb.yandexcloud.net;Database=TestDatabase;Password=TestPassword;Username=TestUser;Protocol=https;Port=8443",
				"SkipTests": "ClickHouse"
			},
			"SQLite.MS": {
				"Provider": "SQLite.MS",
				"ConnectionString": "Data Source=Database/TestData.MS.sqlite"
			},
			"SQLite.MS.Data": {
				"Provider": "Microsoft.Data.Sqlite",
				"ConnectionString": "Data Source=Database/Data/TestData.MS.sqlite"
			}
		},
		"AddProviders": [
			"ClickHouse.Ado",
			"ClickHouse.Client"
		],
		"SkipTests": {
			"ClickHouse": [
				// Complex join predicates not supported
				// Subquery as field is nor supported
				"AssociationTests.TestGenericAssociation1",
				"AssociationTests.TestGenericAssociation2",
				"AssociationTests.TestGenericAssociation3",
				"AssociationTests.TestGenericAssociation4",
				"AssociationTests.TestGenericAssociationRuntime",
				"AssociationTests.TestGenericAssociationRuntimeMany",
				"AssociationTests.SelectMany3",
				"AssociationTests.SelectMany4",
				"AssociationTests.StackOverflow2",
				"AssociationTests.StackOverflow3",
				"AssociationTests.StackOverflow4",
				"AssociationTests.LetTest1",
				"AssociationTests.LetTest2",
				"AssociationTests.NullAssociation",
				"AssociationTests.Issue1711Test1",
				"AssociationTests.Issue1711Test2",
				"AssociationTests.Issue148Test",
				"AssociationTests.ComplexQueryWithManyToMany",
				"AssociationTests.AssociationInHierarchy",
				"AssociationTests.AssociationExpressionMethod",

				// WHERE Exists not supported
				"CommonTests.ParameterTest1",

				// Complex join predicates not supported
				"ComplexTests.Contains1",
				"ComplexTests.Contains2",
				"ComplexTests.Contains3",
				"ComplexTests.Contains4",
				"ComplexTests.Contains6",

				"ComplexTests2.TestUpdateWithTypeAndBaseType",

				"TestInheritanceByBaseType",
				"TestInsertUsingDerivedObjectUsingAttributes",
				"TestInsertUsingDerivedObjectUsingFluentMapping"

			]
		}
	}
}
